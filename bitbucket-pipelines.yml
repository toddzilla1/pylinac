image: python:3.11-slim


definitions:
  caches:
    testfiles: tests_basic/test_files
  steps:
    - step: &pre-commit-checks
        name: Pre-commit checks
        image: python:3.11-slim
        script:
          - apt-get update
          - apt-get -y install git
          - pip install pre-commit
          - pre-commit run --all-files
    - step: &set-up-env
        name: Set up Env
        caches:
          - pip
        script:
          - apt-get update
          - python -m venv venv
          - source venv/bin/activate
          - pip install .[dev]
          - pip install .[docs]
          - pip uninstall pylinac -y
          - pip freeze
        artifacts:
          - venv/**
    - step: &push-to-github
        name: Push to Github
        clone:
          depth: full
        script:
          - apt update
          - apt install git -y
          - git push git@github.com:jrkerns/pylinac.git $BITBUCKET_BRANCH
    - step: &build-docs
        name: Build Docs
        script:
          - source venv/bin/activate
          - nox -s build_docs
        condition:
          changesets:
            includePaths:
              - "**/*.rst"
              - "*.rst"
    - step: &cbct-tests
        name: Run CBCT Tests
        size: 2x
        script:
          - source venv/bin/activate
          - pytest tests_basic/test_cbct.py -n 2 --cov=pylinac.cbct --cov-report term --junitxml=./test-reports/pytest_results.xml
        caches:
          - testfiles
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/test_cbct.py"
              - "pylinac/ct.py"
    - step: &quart-tests
        name: Run Quart Tests
        script:
          - source venv/bin/activate
          - pytest tests_basic/test_quart.py --cov=pylinac.quart --cov-report term --junitxml=./test-reports/pytest_results.xml
        caches:
          - testfiles
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/test_quart.py"
              - "pylinac/quart.py"
              - "pylinac/ct.py"
    - step: &acr-tests
        name: Run ACR CT/MRI Tests
        script:
          - source venv/bin/activate
          - pytest tests_basic/test_acr.py --cov=pylinac.acr --cov-report term --junitxml=./test-reports/pytest_results.xml
        caches:
          - testfiles
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/test_acr.py"
              - "pylinac/ct.py"
              - "pylinac/acr.py"
    - step: &cheese-tests
        name: Run Cheese Phantom Tests
        script:
          - source venv/bin/activate
          - pytest tests_basic/test_cheese.py --cov=pylinac.cheese --cov-report term --junitxml=./test-reports/pytest_results.xml
        caches:
          - testfiles
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/test_cheese.py"
              - "pylinac/ct.py"
              - "pylinac/cheese.py"
    - step: &planar-tests
        name: Run Planar Imaging Tests
        script:
          - source venv/bin/activate
          - pytest tests_basic/test_planar_imaging.py --cov-report term --junitxml=./test-reports/pytest_results.xml
        caches:
          - testfiles
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/test_planar_imaging.py"
              - "pylinac/planar_imaging.py"
    - step: &dlg-tests
        name: Run DLG Tests
        script:
          - source venv/bin/activate
          - pytest tests_basic/test_dlg.py --cov-report term --junitxml=./test-reports/pytest_results.xml
        caches:
          - testfiles
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/test_dlg.py"
              - "pylinac/dlg.py"
    - step: &field-analysis-tests
        name: Run Field Analysis Tests
        script:
          - source venv/bin/activate
          - pytest tests_basic/test_field_analysis.py --cov-report term --junitxml=./test-reports/pytest_results.xml
        caches:
          - testfiles
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/test_field_analysis.py"
              - "pylinac/field_analysis.py"
    - step: &machine-log-tests
        name: Run Machine Logs Tests
        script:
          - source venv/bin/activate
          - pytest tests_basic/test_logs.py --cov-report term --junitxml=./test-reports/pytest_results.xml
        caches:
          - testfiles
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/test_lost.py"
              - "pylinac/log_analyzer.py"
    - step: &picket-fence-tests
        name: Run Picket Fence Tests
        script:
          - source venv/bin/activate
          - pytest tests_basic/test_picketfence.py --cov-report term --junitxml=./test-reports/pytest_results.xml
        caches:
          - testfiles
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/test_picketfence.py"
              - "pylinac/picketfence.py"
    - step: &starshot-tests
        name: Run Starshot Tests
        script:
          - source venv/bin/activate
          - pytest tests_basic/test_starshot.py --cov-report term --junitxml=./test-reports/pytest_results.xml
        caches:
          - testfiles
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/test_starshot.py"
              - "pylinac/starshot.py"
    - step: &calibration-tests
        name: Run TG-51/TRS-398 Tests
        script:
          - source venv/bin/activate
          - pytest tests_basic/test_tg51.py tests_basic/test_trs398.py --cov-report term --junitxml=./test-reports/pytest_results.xml
        caches:
          - testfiles
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/test_tg51.py"
              - "tests_basic/test_trs398.py"
              - "pylinac/vmat.py"
    - step: &vmat-tests
        name: Run VMAT Tests
        script:
          - source venv/bin/activate
          - pytest tests_basic/test_vmat.py --cov-report term --junitxml=./test-reports/pytest_results.xml
        caches:
          - testfiles
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/test_vmat.py"
              - "pylinac/vmat.py"
    - step: &winston-lutz-tests
        name: Run Winston-Lutz Tests
        size: 2x
        script:
          - source venv/bin/activate
          - pytest tests_basic/test_winstonlutz.py --cov-report term --junitxml=./test-reports/pytest_results.xml
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/test_winstonlutz.py"
              - "pylinac/winston_lutz.py"
    - step: &winston-lutz-mtmf-tests
        name: Run Winston-Lutz Multi-Target Multi-Field Tests
        size: 2x
        script:
          - source venv/bin/activate
          - pytest tests_basic/test_winstonlutz_mtmf.py --cov-report term --junitxml=./test-reports/pytest_results.xml
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/test_winstonlutz.py"
              - "pylinac/winston_lutz.py"
    - step: &plan-generator-tests
        name: Plan generator tests
        script:
          - source venv/bin/activate
          - pytest tests_basic/test_plan_generator.py tests_basic/test_generated_plans.py --cov-report term --junitxml=./test-reports/pytest_results.xml
        condition:
            changesets:
                includePaths:
                - "pylinac/core/**"
                - "pylinac/plan_generator/**"
                - "tests_basic/test_plan_generator.py"
                - "scripts/prefab_plan_generator.py"
    - step: &core-module-tests
        name: Run core module tests
        script:
          - source venv/bin/activate
          - pytest tests_basic/core --cov-report term --junitxml=./test-reports/pytest_results.xml
        caches:
          - testfiles
        condition:
          changesets:
            includePaths:
              - "pylinac/core/**"
              - "tests_basic/core/**"
    - step: &update-dev-kraken
        name: Update Dev Kraken
        script:
          - apt-get update
          - apt-get install wget -y
          - pip install nox
          # Get gcloud CLI
          - wget https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-416.0.0-linux-x86_64.tar.gz -O gcloud_cli.tar.gz
          - tar -xf gcloud_cli.tar.gz
          - ./google-cloud-sdk/install.sh --quiet
          - export PATH="./google-cloud-sdk/bin:$PATH"
          - nox -s update_dev_kraken

pipelines:

  custom:
    update-kraken:
      - step: *set-up-env
      - step: *update-dev-kraken
    pypi:
      - step:
            name: Set up Env
            caches:
              - pip
            script:
              - apt-get update
              - python -m venv venv
              - source venv/bin/activate
              - pip install .[dev]
            artifacts:
              - venv/**
      - step:
          name: Push to PYPI
          script:
            - source venv/bin/activate
            - pipe: atlassian/pypi-publish:0.3.1
              variables:
                PYPI_USERNAME: $PYPI_USERNAME
                PYPI_PASSWORD: $PYPI_PASSWORD
                DISTRIBUTIONS: 'bdist_wheel'

  pull-requests:
    '**':
      - parallel:
          - step: *set-up-env
          - step: *pre-commit-checks
      - parallel:
          - step: *build-docs
          - step: *cbct-tests
          - step: *acr-tests
          - step: *cheese-tests
          - step: *quart-tests
          - step: *planar-tests
          - step: *dlg-tests
          - step: *field-analysis-tests
          - step: *machine-log-tests
          - step: *picket-fence-tests
          - step: *starshot-tests
          - step: *calibration-tests
          - step: *vmat-tests
          - step: *winston-lutz-tests
          - step: *winston-lutz-mtmf-tests
          - step: *plan-generator-tests
          - step: *core-module-tests

  branches:
    release*:
      - step: *push-to-github
    master:
      - step: *push-to-github
      - step: *update-dev-kraken
